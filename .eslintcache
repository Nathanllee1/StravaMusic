[{"/home/nathanlee/Workspace/stravamusic/frontend/src/App.js":"1","/home/nathanlee/Workspace/stravamusic/frontend/src/index.js":"2","/home/nathanlee/Workspace/stravamusic/frontend/src/reportWebVitals.js":"3","/home/nathanlee/Workspace/stravamusic/frontend/src/SignedIn.js":"4","/home/nathanlee/Workspace/stravamusic/frontend/src/card.js":"5"},{"size":6938,"mtime":1609270431856,"results":"6","hashOfConfig":"7"},{"size":500,"mtime":1608686695134,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608686695134,"results":"9","hashOfConfig":"7"},{"size":6425,"mtime":1609276636374,"results":"10","hashOfConfig":"7"},{"size":1006,"mtime":1609216281293,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"1nehe8h",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/nathanlee/Workspace/stravamusic/frontend/src/App.js",["24"],"import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport demo from './demo.png'\nimport spot from './Spotify_Logo_RGB_White.png'\nimport stravaCon from './btn_strava_connectwith_orange.png'\nimport SignedIn from './SignedIn';\n\nfunction App() {\n\n    const [strava, setStrava] = useState();\n    const [spotify, setSpotify] = useState();\n    const [curUrl, setUrl] = useState();\n\n    const [content, setContent] = useState();\n\n    const apiLoc = \"http://localhost:4000\";\n\n    useEffect(() => {\n        const url = new URL(window.location);\n        setUrl(url.origin)\n\n        if (localStorage.getItem(\"lastClicked\") === \"strava\" ) {\n            let stravaCode = url.searchParams.get(\"code\");\n\n            if (!stravaCode) { // edge case where it gets stuck on last clicked\n                localStorage.clear();\n                window.location.reload(false);\n            }\n\n            const getData = async() => {\n                let myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n\n                let raw = JSON.stringify({\"strava\":stravaCode});\n\n                let requestOptions = {\n                    method: 'POST',\n                    headers: myHeaders,\n                    body: raw,\n                    redirect: 'follow'\n                };\n\n                await fetch(apiLoc + \"/authorizeStrava\", requestOptions)\n                    .then(response => response.text())\n                    .then(result => {\n                        console.log(result)\n                        let res = JSON.parse(result);\n                        console.log(res);\n                        if (res.spotRef) { // If the user exists\n\n                            localStorage.setItem(\"stravaTok\", res.stravaTok);\n                            localStorage.setItem(\"id\", res.stravaId);\n                            //console.log(res.stravaID)\n                            localStorage.setItem(\"spotifyTok\", res.spotTok);\n                            localStorage.setItem(\"lastClicked\", \"signedIn\")\n                            setContent(<SignedIn />);\n                        } else { // If it's a new user\n                            localStorage.setItem(\"stravaTok\", res.stravaTok);\n                            localStorage.setItem(\"stravaRef\", res.stravaRef);\n                            localStorage.setItem(\"id\", res.stravaId);\n\n                            setContent (\n                                <div id=\"content\">\n                                    <h1>Awesome! Link your Spotify account</h1>\n                                    <div id=\"spotify\" onClick={onSpotifyClick}>\n                                        <img height={\"24px\"} src={spot} alt={\"spotify\"}/>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    })\n                    .catch(error => console.log('error', error));\n            }\n            getData();\n\n        } else if (localStorage.getItem(\"lastClicked\") === \"signedIn\") {\n          setContent (\n              <SignedIn />\n          )\n        } else if (localStorage.getItem(\"lastClicked\") === \"spotify\" ) {\n            let spotCode = url.searchParams.get(\"code\")\n            localStorage.setItem(\"spotify\", spotCode);\n            submit();\n\n        } else {\n            setContent (\n                <div id=\"content\">\n                    <h1>Put the songs you listened to on <span style={{\"color\":\"#1DB954\"}}>Spotify</span> during your activities on <span style={{\"color\":\"#fc5200\"}}>Strava</span></h1>\n                    <img width=\"350\" src={demo} alt=\"Demo\"/>\n                    <p>Once setup, the process is done completely automatically</p>\n                    <br />\n                    <br />\n                    <h2>Start by connecting your Strava Account</h2>\n                    <p>Or if you've already signed up also click here</p>\n                    <img id=\"stravacon\" src={stravaCon} onClick={onStravaClick} alt=\"stravaConnect\"/>\n                </div>\n            )\n        }\n\n        setSpotify(localStorage.getItem(\"spotify\"));\n        setStrava(localStorage.getItem(\"strava\"));\n    }, [])\n\n    const onStravaClick = () => {\n        localStorage.setItem(\"lastClicked\", \"strava\")\n        //console.log(`http://www.strava.com/oauth/authorize?client_id=24406&response_type=code&redirect_uri=` + window.location.origin +`/exchange_token&approval_prompt=force&scope=activity:read_all,activity:write`)\n        window.location = `http://www.strava.com/oauth/authorize?client_id=24406&response_type=code&redirect_uri=` + window.location.origin +`/exchange_token&approval_prompt=force&scope=activity:read_all,activity:write`;\n    }\n\n    const onSpotifyClick = () => {\n        //encodeURIComponent(curUrl)\n        localStorage.setItem(\"lastClicked\", \"spotify\")\n        window.location = \"https://accounts.spotify.com/authorize?client_id=5a18a679262e4ac094c14cacfd5fd861&response_type=code&redirect_uri=\" + encodeURI(window.location.origin)  + \"&scope=user-read-private%20user-read-email%20user-read-recently-played&state=34fFs29kd09\"\n    }\n\n    const submit = () => {\n\n            let myHeaders = new Headers();\n            myHeaders.append(\"Content-Type\", \"application/json\");\n\n            let raw = JSON.stringify({\"stravaTok\":localStorage.getItem(\"stravaTok\"),\"stravaRef\":localStorage.getItem(\"stravaRef\"), \"spotify\":localStorage.getItem(\"spotify\"), \"id\":localStorage.getItem(\"id\")});\n\n            let requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: 'follow'\n            };\n\n            fetch(apiLoc + \"/createuser\", requestOptions)\n                .then(response => response.text())\n                .then(result => {\n                    console.log(result);\n                    let res = JSON.parse(result);\n                    localStorage.setItem(\"spotTok\",res.spotTok);\n                    localStorage.setItem(\"lastClicked\", \"signedIn\")\n\n                    setContent(<SignedIn />)\n                })\n                .catch(error => console.log('error', error));\n\n    }\n\n\n    return (\n    <div className=\"App\">\n        <div id={\"debug\"}>\n            <button onClick={onStravaClick}>Connect with strava</button>\n            <button onClick={onSpotifyClick}>Connect with spotify</button>\n            <p>Strava: {strava}</p>\n            <p>Spotify: {spotify}</p>\n            <button onClick={submit}>Submit</button>\n            <button onClick={()=>localStorage.clear()}>Clear</button>\n        </div>\n        <br/>\n\n        {content}\n\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n<br/>\n      <button onClick={onStravaClick}>Connect with strava</button>\n        <button onClick={onSpotifyClick}>Connect with spotify</button>\n        <p>Strava: {strava}</p>\n        <p>Spotify: {spotify}</p>\n        <button onClick={submit}>Submit</button>\n */","/home/nathanlee/Workspace/stravamusic/frontend/src/index.js",[],"/home/nathanlee/Workspace/stravamusic/frontend/src/reportWebVitals.js",[],"/home/nathanlee/Workspace/stravamusic/frontend/src/SignedIn.js",["25","26"],"/home/nathanlee/Workspace/stravamusic/frontend/src/card.js",["27","28"],"import React, {useState, useEffect} from 'react';\n\n\nfunction Card(props) {\n\n\n    let date = new Date(Date.parse(props.activity.start_date_local))\n\n    return (\n        <div id={\"card\"} key={props.id}>\n            <h2 onClick={() => window.location = \"https://strava.com/activities/\" + props.id} id={\"header\"}>{props.activity.name}</h2>\n            <p>{date.toLocaleDateString()}</p>\n            <div id={\"stats\"}>\n                <p><span style={{color: \"grey\"}}>Distance:</span> {Math.round((props.activity.distance / 1609) + Number.EPSILON) * 100 / 100} miles  &nbsp; &nbsp; &nbsp;\n\n                    <span style={{color: \"grey\"}}>Elevation Climbed:</span> {Math.round(props.activity.total_elevation_gain * 3.28084 + Number.EPSILON) * 100 / 100} feet</p>\n            </div>\n            <br/>\n\n            <div id={\"songList\"}>\n                {props.imageList}\n            </div>\n            <br />\n            <span id={\"songList\"}>{props.songList}</span>\n\n        </div>\n    )\n}\n\nexport default Card;",{"ruleId":"29","severity":1,"message":"30","line":12,"column":12,"nodeType":"31","messageId":"32","endLine":12,"endColumn":18},{"ruleId":"33","severity":1,"message":"34","line":77,"column":94,"nodeType":"35","endLine":77,"endColumn":109},{"ruleId":"36","severity":1,"message":"37","line":96,"column":8,"nodeType":"38","endLine":96,"endColumn":10,"suggestions":"39"},{"ruleId":"29","severity":1,"message":"40","line":1,"column":16,"nodeType":"31","messageId":"32","endLine":1,"endColumn":24},{"ruleId":"29","severity":1,"message":"41","line":1,"column":26,"nodeType":"31","messageId":"32","endLine":1,"endColumn":35},"no-unused-vars","'curUrl' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectedSong' and 'userObj'. Either include them or remove the dependency array.","ArrayExpression",["42"],"'useState' is defined but never used.","'useEffect' is defined but never used.",{"desc":"43","fix":"44"},"Update the dependencies array to be: [selectedSong, userObj]",{"range":"45","text":"46"},[3878,3880],"[selectedSong, userObj]"]